{"version":3,"sources":["index.js"],"names":["QUOTES","$","getJSON","response","ReactDOM","render","QuoteMachine","document","getElementById","props","state","quoteId","quote","text","seek","playAnimationId","animationSpeed","this","getNewQuote","id","Math","floor","random","setState","clearInterval","setInterval","playAnimation","bind","css","newLetter","length","fadeIn","tumblrLink","twitterLink","authorLink","encodeURIComponent","author","Fragment","className","href","name","onClick","React","Component"],"mappings":"2OAQIA,EAAS,GAEbC,IAAEC,QAHgB,+IAGG,SAACC,GAClBH,EAASG,EACTC,IAASC,OAAO,kBAACC,EAAD,MAAkBC,SAASC,eAAe,Y,IAIxDF,E,kDACF,WAAYG,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,QAAS,EACTC,MAAOZ,EAAO,GACda,KAAM,GACNC,KAAM,GAEV,EAAKC,gBAAkB,EACvB,EAAKC,eAAiB,GATP,E,gEAafC,KAAKC,gB,oCAIL,IACIC,EAAKC,KAAKC,MADJ,IACUD,KAAKE,UACzBL,KAAKM,SAAS,CACVZ,QAASQ,EACTP,MAAOZ,EAAOmB,GACdN,KAAM,GACNC,KAAM,IAEVU,cAAcP,KAAKF,iBACnBE,KAAKF,gBAAkBU,YAAYR,KAAKS,cAAcC,KAAKV,MAAOA,KAAKD,gBACvEf,IAAE,WAAW2B,IAAI,UAAW,U,sCAI5B,IAAIC,EAAYZ,KAAKP,MAAME,MAAMA,MAAMK,KAAKP,MAAMI,MAClDG,KAAKM,SAAS,CACVV,KAAMI,KAAKP,MAAMG,KAAOgB,EACxBf,KAAMG,KAAKP,MAAMI,KAAO,IAExBG,KAAKP,MAAMI,OAASG,KAAKP,MAAME,MAAMA,MAAMkB,SAC3CN,cAAcP,KAAKF,iBACnBd,IAAE,WAAW8B,OAAO,Q,+BAKxB,IAAIC,EAAa,6FACbC,EAAc,8EACdC,EAAa,mCAOjB,OANAD,GAAeE,mBAAmBlB,KAAKP,MAAME,MAAMA,OACnDqB,GAAeE,mBAAmB,MAAQlB,KAAKP,MAAME,MAAMwB,QAC3DJ,GAAcG,mBAAmBlB,KAAKP,MAAME,MAAMwB,QAClDJ,GAAc,YAAcG,mBAAmBlB,KAAKP,MAAME,MAAMA,OAChEoB,GAAc,uFACdE,GAAcC,mBAAmBlB,KAAKP,MAAME,MAAMwB,QAE9C,kBAAC,IAAMC,SAAP,KACI,yBAAKlB,GAAG,aACJ,yBAAKmB,UAAU,cACX,uBAAGnB,GAAG,cAAcmB,UAAU,SAASC,KAAMN,GAAa,kBAAC,SAAD,CAAQO,KAAK,aACvE,0BAAMrB,GAAG,UAAS,uBAAGmB,UAAU,SAASC,KAAMP,GAAY,kBAAC,SAAD,CAAQQ,KAAK,aACvE,4BAAQrB,GAAG,YAAYsB,QAASxB,KAAKC,YAAYS,KAAKV,OAAtD,cAEJ,wBAAIE,GAAG,QAAQF,KAAKP,MAAMG,MAC1B,wBAAIM,GAAG,UAAS,uBAAGoB,KAAML,GAAajB,KAAKP,MAAME,MAAMwB,e,GA9DhDM,IAAMC,Y","file":"static/js/main.014c6823.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport $ from 'jquery'\nimport 'font-awesome/css/font-awesome.css'\nimport { Faicon } from 'faicon'\n\n\nconst QUOTE_URL = 'https://gist.githubusercontent.com/shreyasminocha/7d5dedafc1fe158f82563c1223855177/raw/325d51aca7165b2498971afcff9bed286a52dc0e/quotes.json'\nlet QUOTES = ''\n\n$.getJSON(QUOTE_URL, (response) => {\n    QUOTES = response\n    ReactDOM.render(<QuoteMachine />, document.getElementById('root'))\n})\n\n\nclass QuoteMachine extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            quoteId: 0,\n            quote: QUOTES[0],\n            text: '',\n            seek: 0\n        }\n        this.playAnimationId = 0\n        this.animationSpeed = 50\n    }\n\n    componentDidMount() {\n        this.getNewQuote()\n    }\n\n    getNewQuote() {\n        let max = 101\n        let id = Math.floor(Math.random() * max)\n        this.setState({\n            quoteId: id,\n            quote: QUOTES[id],\n            text: '',\n            seek: 0\n        })\n        clearInterval(this.playAnimationId)\n        this.playAnimationId = setInterval(this.playAnimation.bind(this), this.animationSpeed)\n        $('#author').css('display', 'none')\n    }\n\n    playAnimation() {\n        let newLetter = this.state.quote.quote[this.state.seek]\n        this.setState({\n            text: this.state.text + newLetter,\n            seek: this.state.seek + 1\n        })\n        if (this.state.seek === this.state.quote.quote.length) {\n            clearInterval(this.playAnimationId)\n            $('#author').fadeIn(2000)\n        }\n    }\n\n    render () {\n        let tumblrLink = 'https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption='\n        let twitterLink = 'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text='\n        let authorLink = 'https://www.google.com/search?q='\n        twitterLink += encodeURIComponent(this.state.quote.quote)\n        twitterLink += encodeURIComponent(' - ' + this.state.quote.author)\n        tumblrLink += encodeURIComponent(this.state.quote.author)\n        tumblrLink += '&content=' + encodeURIComponent(this.state.quote.quote)\n        tumblrLink += '&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button'\n        authorLink += encodeURIComponent(this.state.quote.author)\n        return (\n            <React.Fragment>\n                <div id='quote-box'>\n                    <div className='button-row'>\n                        <a id='tweet-quote' className='button' href={twitterLink}><Faicon name='twitter' /></a>\n                        <span id='tumblr'><a className='button' href={tumblrLink}><Faicon name='tumblr' /></a></span>\n                        <button id='new-quote' onClick={this.getNewQuote.bind(this)}>New Quote</button>\n                    </div>\n                    <h2 id='text'>{this.state.text}</h2>\n                    <h3 id='author'><a href={authorLink}>{this.state.quote.author}</a></h3>\n                </div>\n            </React.Fragment>\n        )\n    }\n}"],"sourceRoot":""}